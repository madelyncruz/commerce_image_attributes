<?php

/**
 * Implements hook_permission().
 */
function commerce_image_attributes_permission() { 
  return array(
    'administer commerce image attributes' => array(
      'title' => t('Administer Commerce Image Attributes'),
      'description' => t('Ability to view the administrations page of Commerce Image Attributes.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function commerce_image_attributes_menu() { 
  return array(
    'admin/commerce/commerce-image-attributes-settings' => array(
      'title' => t('Commerce Image Attributes Settings'),
      'page callback' => 'drupal_get_form',
      'page arguments' => array('commerce_image_attributes_settings_form'),
      'access callback' => TRUE,
      'access arguments' => array('administer commerce image attributes'),
      'file' => 'includes/hdmd_commerce_image_settings.admin.inc',
      'file path' => drupal_get_path('module', 'commerce_image_attributes'),
    )
  );
}

/**
 * Implements hook_form_alter().
 */
function commerce_image_attributes_form_commerce_cart_add_to_cart_form_alter(&$form, &$form_state) {
  if (isset($form['product_id']['#options']) && $options = _commerce_product_field_image_options(array_flip($form['product_id']['#options']))) {
    $form['product_id']['#type'] = 'radios';
    $form['product_id']['#options'] = $options;
  }
}

function _get_commerce_product_list($product_ids) {
  $type = variable_get('commerce_image_attributes_type');
  $field_name = variable_get('commerce_image_attributes_field');
  
  $query = db_select('commerce_product', 'p')
          ->condition('p.type', $type)
          ->condition('p.product_id', $product_ids, 'IN')
          ->fields('p', array('title', 'product_id'));
  
  if (db_table_exists('field_data_' . $field_name)) {
    $query->leftJoin('field_data_' . $field_name, 'f', 'f.entity_id = p.product_id');
    $query->leftJoin('file_managed', 'fm', 'fm.fid = f.' . $field_name . '_fid');
    $query->fields('fm', array('uri'));
    $query->groupBy('p.product_id');
  }
  
  return $query->execute()->fetchAll();
}

function _commerce_product_field_image_options($product_ids) {
  $results = _get_commerce_product_list($product_ids);
  
  foreach ($results as $result) {
    $output = $result->title;

    if (isset($result->uri) && !empty($result->uri)) {
      $image_settings = array(
          'path' => $result->uri,
          'style_name' => 'thumbnail',
          'attributes' => array('title' => $result->title
        )
      );

      $output = theme('image_style', $image_settings);
    }
    
    $options[$result->product_id] = $output;
  }
  
  return isset($options) ? $options : array();
}